// For format details, see https://aka.ms/devcontainer.json. For config options, see the
// README at: https://github.com/devcontainers/templates/tree/main/src/docker-existing-docker-compose
{
	"name": "Chain Container",

	// Update the 'dockerComposeFile' list if you have more compose files or use different names.
	// The .devcontainer/docker-compose.yml file contains any overrides you need/want to make.
	"dockerComposeFile": [
		"../../docker-compose.yml"
	],

	// The 'service' property is the name of the service for the container that VS Code should
	// use. Update this value and .devcontainer/docker-compose.yml to the real service name.
	"service": "chain0",

	// The optional 'workspaceFolder' property is the path VS Code should open by default when
	// connected. This is typically a file mount in .devcontainer/docker-compose.yml
	"workspaceFolder": "/workspace/src",

	// Features to add to the dev container. More info: https://containers.dev/features.
	//"features": {
	//	"ghcr.io/devcontainers/features/rust:1": {}
	//},

	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	//"forwardPorts": [3001:3001],

	// Uncomment the next line if you want start specific services in your Docker Compose config.
	// "runServices": [],

	// Uncomment the next line if you want to keep your containers running after VS Code shuts down.
	"shutdownAction": "none",

	// Uncomment the next line to run commands after the container is created.
	// "postCreateCommand": "cat /etc/os-release"
    "postCreateCommand": "rustup component add rust-analyzer && cargo update -p cc --aggressive",


	// Uncomment to connect as an existing user other than the container default. More info: https://aka.ms/dev-containers-non-root.
	// "remoteUser": "devcontainer"

	// Configure tool-specific properties.
	"customizations": {
       	"vscode": {
            "extensions": [
                "rust-lang.rust-analyzer",
                "tamasfe.even-better-toml", // for Cargo.toml
                "eamodio.gitlens", // IDE Git information
                "davidanson.vscode-markdownlint",
                "ms-azuretools.vscode-docker", // Docker integration and linting
                "shardulm94.trailing-spaces", // Show trailing spaces
                "Gruntfuggly.todo-tree", // Highlights TODO comments
                "bierner.emojisense", // Emoji sense for markdown
                "stkb.rewrap", // rewrap comments after n characters on one line
                "vscode-icons-team.vscode-icons", // Better file extension icons
                "github.vscode-pull-request-github", // Github interaction
                "redhat.vscode-yaml", // Kubernetes, Drone syntax highlighting
                "bajdzis.vscode-database", // Supports connections to mysql or postgres, over SSL, socked
                "IBM.output-colorizer", // Colorize your output/test logs
                "github.copilot" // AI code completion
                // "mohsen1.prettify-json", // Prettify JSON data
                // "zxh404.vscode-proto3", // Supports Proto syntax
                // "jrebocho.vscode-random", // Generates random values
                // "alefragnani.Bookmarks", // Manage bookmarks
                // "quicktype.quicktype", // Paste JSON as code
                // "spikespaz.vscode-smoothtype", // smooth cursor animation
            ],
            "settings": {
                "files.eol": "\n",
                "editor.formatOnSave": true,
                "editor.codeActionsOnSaveTimeout": 3000,
                "[rust]": {
                    "editor.defaultFormatter": "rust-lang.rust-analyzer"
                },
                "rust-analyzer.serverPath": "/usr/local/cargo/bin/rust-analyzer",
                "remote.extensionKind": {
                    "ms-azuretools.vscode-docker": "workspace"
                },
            }
		}    
	}
}
